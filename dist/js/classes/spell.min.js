class Spell{constructor(t,s,e){this.id=s,this.timer=0,this.cost=0,this.cooldown=0,this.player=t,this.refund=!0,this.canDodge=!0,this.totaldmg=0,this.data=[0,0,0,0,0],this.name=e||this.constructor.name,this.useonly=!1,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.weaponspell=!0,this.defenseType=DEFENSETYPE.MELEE,this.school=SCHOOL.PHYSICAL,this.minrage=0,this.offensive=!0;let i=spells.filter(t=>t.id==this.id)[0];i&&(i.minrageactive&&(this.minrage=parseInt(i.minrage)),i.maxrageactive&&(this.maxrage=parseInt(i.maxrage)),i.maincdactive&&(this.maincd=1e3*parseInt(i.maincd)),i.cooldown&&(this.cooldown=parseInt(i.cooldown)||0),i.durationactive&&(this.cooldown=Math.max(parseInt(i.duration),this.cooldown)),i.value1&&(this.value1=parseInt(i.value1)),i.value2&&(this.value2=parseInt(i.value2)),i.priorityapactive&&(this.priorityap=parseInt(i.priorityap)),i.consumedrage&&(this.consumedrage=i.consumedrage),i.unqueueactive&&(this.unqueue=parseInt(i.unqueue)),i.exmacro&&(this.exmacro=i.exmacro),i.execute&&(this.execute=i.execute),i.globalsactive&&(this.globals=i.globals),i.bloodsurge&&(this.bloodsurge=i.bloodsurge),i.afterswing&&(this.afterswing=i.afterswing),i.swingreset&&(this.swingreset=i.swingreset),i.timetoendactive&&(this.timetoend=1e3*parseInt(i.timetoend)),i.timetostartactive&&(this.timetostart=1e3*parseInt(i.timetostart)),i.zerkerpriority&&(this.zerkerpriority=i.zerkerpriority),i.swordboard&&(this.swordboard=i.swordboard),i.resolve&&(this.resolve=i.resolve),i.switchstart&&(this.switchstart=i.switchstart),i.switchtimeactive&&(this.switchtime=1e3*parseInt(i.switchtime)),i.switchtimeactive&&(this.switchrage=i.switchrage),i.switchtimeactive&&(this.switchtimeactive=i.switchtimeactive),i.switchdefault&&(this.switchdefault=i.switchdefault),i.durationactive&&(this.duration=parseInt(i.duration)))}dmg(){return 0}use(){this.player.timer=1500,this.player.rage-=this.cost,this.timer=1e3*this.cooldown,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax)}step(t){return this.timer<=t?(this.timer=0,log&&this.player.log(`${this.name} off cooldown`)):this.timer-=t,this.timer}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&this.player.rage>=this.minrage}failed(){}}class Bloodthirst extends Spell{constructor(t,s){super(t,s),this.cost=30-t.ragecostbonus,this.cooldown=6,this.weaponspell=!1}dmg(){let t;return(t=.45*this.player.stats.ap)*this.player.stats.dmgmod*this.player.mainspelldmg}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&this.player.rage>=this.minrage}}class Whirlwind extends Spell{constructor(t,s){super(t,s),this.cost=25-t.ragecostbonus,this.cooldown=10,this.refund=!1}dmg(){let t;return this.player.auras.consumedrage&&this.player.auras.consumedrage.timer&&(this.offhandhit=!0),t=rng(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg),(t+=this.player.stats.ap/14*this.player.mh.normSpeed+this.player.stats.moddmgdone)*this.player.stats.dmgmod}use(){this.player.isValidStance("zerk")||this.player.switch("zerk"),this.player.timer=1500,this.player.rage-=this.cost,this.timer=1e3*this.cooldown,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax)}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&(this.player.isValidStance("zerk")||this.player.talents.rageretained>=this.cost)&&(!this.maxrage||this.player.isValidStance("zerk")||this.player.rage<=this.maxrage)&&(!this.minrage||this.player.rage>=this.minrage)&&(!this.maincd||this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)}}class Overpower extends Spell{constructor(t,s){super(t,s),this.cost=5-t.ragecostbonus,this.cooldown=5,this.canDodge=!1}dmg(){let t;return t=this.value1+rng(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg),(t+=this.player.stats.ap/14*this.player.mh.normSpeed+this.player.stats.moddmgdone)*this.player.stats.dmgmod}use(){this.player.timer=1500,this.player.dodgetimer=0,this.timer=1e3*this.cooldown,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.player.isValidStance("battle")||this.player.switch("battle"),this.player.rage-=this.cost}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&this.player.dodgetimer&&(this.player.isValidStance("battle")||this.player.talents.rageretained>=this.cost)&&(!this.maxrage||this.player.isValidStance("battle")||this.player.rage<=this.maxrage)&&(!this.maincd||this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)}}class Execute extends Spell{constructor(t,s){super(t,s),this.cost=15-t.talents.executecost-t.ragecostbonus,this.usedrage=0,this.totalusedrage=0,this.refund=!1,this.weaponspell=!1}dmg(){let t;return(t=this.value1+this.value2*this.usedrage)*this.player.stats.dmgmod}use(t){t&&t.exmacro&&(t.canUse()?(this.player.cast(t),this.player.heroicdelay=0):t instanceof Cleave&&t.backupheroic&&t.backupheroic.canUse()&&(this.player.cast(t.backupheroic),this.player.heroicdelay=0)),this.player.timer=1500,this.player.rage-=this.cost,this.usedrage=~~this.player.rage,this.totalusedrage+=this.usedrage-(this.player.auras.suddendeath&&this.player.auras.suddendeath.timer?10:0),this.timer=1-step%1,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax)}step(t){return this.timer<=t?(this.timer=0,this.result!=RESULT.MISS&&(this.result,RESULT.DODGE)):this.timer-=t,this.timer}canUse(){return!this.player.timer&&this.cost<=this.player.rage}}class Bloodrage extends Spell{constructor(t,s){super(t,s),this.cost=0,this.rage=10+t.talents.bloodragebonus,this.cooldown=60,this.useonly=!0,this.offensive=!1}use(){this.timer=1e3*this.cooldown;let t=this.player.rage;this.player.rage=Math.min(this.player.rage+this.rage,100),this.player.auras.bloodrage.use(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.player.auras.consumedrage&&t<60&&this.player.rage>=60&&this.player.auras.consumedrage.use()}canUse(){return 0==this.timer}}class HeroicStrike extends Spell{constructor(t,s){super(t,s,"Heroic Strike"),this.cost=15-t.talents.impheroicstrike-t.ragecostbonus,this.bonus=this.value1,this.useonly=!0,this.unqueuetimer=300+rng(this.player.reactionmin,this.player.reactionmax)}use(){this.player.nextswinghs=!0,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.unqueuetimer=300+rng(this.player.reactionmin,this.player.reactionmax)}canUse(){return!this.player.nextswinghs&&this.cost<=this.player.rage&&(!this.minrage&&!this.maincd||this.minrage&&this.player.rage>=this.minrage||this.maincd&&this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.maincd&&this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)&&(!this.unqueue||this.player.mh.timer>this.unqueuetimer)}}class Cleave extends Spell{constructor(t,s){if(super(t,s),this.cost=20-t.ragecostbonus,this.bonus=this.value1*(1+this.player.talents.cleavebonus/100),this.useonly=!0,this.unqueuetimer=300+rng(this.player.reactionmin,this.player.reactionmax),this.exmacro)for(let s of spells){let e=parseInt(s.minlevel||0),i=parseInt(s.maxlevel||60);"Heroic Strike"==s.name&&t.level>=e&&t.level<=i&&(this.backupheroic=new HeroicStrike(t,s.id),this.backupheroic.exmacro=!0)}}use(){this.player.nextswinghs=!0,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.unqueuetimer=300+rng(this.player.reactionmin,this.player.reactionmax)}canUse(){return!this.player.nextswinghs&&this.cost<=this.player.rage&&(!this.minrage&&!this.maincd||this.minrage&&this.player.rage>=this.minrage||this.maincd&&this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.maincd&&this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)&&(!this.unqueue||this.player.mh.timer>this.unqueuetimer)}}class MortalStrike extends Spell{constructor(t,s){super(t,s,"Mortal Strike"),this.cost=30-t.ragecostbonus,this.cooldown=6}dmg(){let t;return t=this.value1+rng(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg),(t+=this.player.stats.ap/14*this.player.mh.normSpeed+this.player.stats.moddmgdone)*this.player.stats.dmgmod*this.player.mainspelldmg}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&this.player.rage>=this.minrage}}class SunderArmor extends Spell{constructor(t,s){super(t,s,"Sunder Armor"),this.cost=15-t.talents.impsunderarmor-t.ragecostbonus,this.stacks=0,this.nocrit=!0}use(){this.player.timer=1500,this.player.rage-=this.cost,this.timer=1e3*this.cooldown,this.stacks=Math.min(6,this.stacks+1),(this.player.homunculi||this.player.exposed)&&(this.stacks=6),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax)}dmg(){if(!this.devastate)return 0;let t=1.5*(1+.1*(this.stacks-1));return((this.player.mh.mindmg+this.player.mh.maxdmg)/2+this.player.stats.ap/14*this.player.mh.speed)/this.player.mh.speed*t*this.player.stats.dmgmod}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&this.player.rage>=this.minrage&&(!this.minrage||this.player.rage>=this.minrage)&&(!this.globals||this.stacks<this.globals)}failed(){this.stacks--}}class Hamstring extends Spell{constructor(t,s){super(t,s),this.cost=10-t.ragecostbonus,t.items.includes(19577)&&(this.cost-=2)}dmg(){let t;return(t=this.value1)*this.player.stats.dmgmod}}class ThunderClap extends Spell{constructor(t,s){super(t,s),this.defenseType=DEFENSETYPE.MAGIC,this.cost=20-t.ragecostbonus-t.talents.impthunderclap}dmg(){let t;return t=this.value1+("sod"==this.player.mode?~~(.05*this.player.stats.ap):0),this.player.furiousthunder&&(t*=2),t*this.player.stats.dmgmod}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&(!this.minrage||this.player.rage>=this.minrage)&&(this.player.furiousthunder||this.player.isValidStance("battle"))}}class VictoryRush extends Spell{constructor(t,s){super(t,s,"Victory Rush"),this.cost=0,this.stacks=0,this.weaponspell=!1}use(){this.stacks++,this.player.timer=1500,this.player.rage-=this.cost,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax)}dmg(){let t;return(t=.45*this.player.stats.ap)*this.player.stats.dmgmod}canUse(){return!this.player.timer&&!this.stacks}}class RagingBlow extends Spell{constructor(t,s){super(t,s,"Raging Blow"),this.cost=0,this.cooldown=8}dmg(){let t;return t=rng(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg),(t+=this.player.stats.ap/14*this.player.mh.normSpeed+this.player.stats.moddmgdone)*this.player.stats.dmgmod}canUse(t){return!this.timer&&!this.player.timer&&(!t||this.execute)&&this.player.isEnraged()}reduce(t){this.timer&&this.player.isEnraged()&&t&&t!=this&&t.offensive&&(this.timer=Math.max(0,this.timer-1e3))}}class BerserkerRage extends Spell{constructor(t,s){super(t,s),this.cost=0,this.rage=t.talents.berserkerbonus,this.cooldown=30,this.useonly=!0,this.offensive=!1}use(){this.player.timer=1500,this.timer=1e3*this.cooldown;let t=this.player.rage;this.player.isValidStance("zerk")||this.player.switch("zerk"),this.player.rage=Math.min(this.player.rage+this.rage,100),this.player.auras.berserkerrage.use(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.player.auras.consumedrage&&t<60&&this.player.rage>=60&&this.player.auras.consumedrage.use()}canUse(){return 0==this.timer&&!this.player.timer&&(!this.maxrage||this.player.isValidStance("zerk")||this.player.rage<=this.maxrage)}}class QuickStrike extends Spell{constructor(t,s){super(t,s,"Quick Strike"),this.cost=20-t.talents.impheroicstrike-t.ragecostbonus,this.cooldown=0}dmg(){let t;return(t=~~rng(.1*this.player.stats.ap,.2*this.player.stats.ap)+this.player.stats.moddmgdone)*this.player.stats.dmgmod}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&(!this.minrage&&!this.maincd||this.minrage&&this.player.rage>=this.minrage||this.maincd&&this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.maincd&&this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)}}class RagePotion extends Spell{constructor(t,s){super(t,s,"Rage Potion"),this.cost=0,this.minrage=80,this.cooldown=120,this.useonly=!0,this.offensive=!1}prep(t){return void 0!==this.timetoend&&(this.usestep=Math.max(t-this.timetoend,0)),void 0!==this.timetostart&&(this.usestep=this.timetostart),0}use(){this.timer=1e3*this.cooldown;let t=this.player.rage;this.player.rage=Math.min(this.player.rage+~~rng(this.value1,this.value2),100),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.player.auras.consumedrage&&t<60&&this.player.rage>=60&&this.player.auras.consumedrage.use()}canUse(){return 0==this.timer&&this.player.rage<this.minrage&&step>=this.usestep}}class Slam extends Spell{constructor(t,s){super(t,s),this.cost=15-t.ragecostbonus,this.casttime=t.precisetiming?0:1500-100*t.talents.impslam,this.cooldown=t.precisetiming?6:0,this.mhthreshold=0}dmg(t){let s;return t||(t=this.player.mh),s=this.value1+rng(t.mindmg+t.bonusdmg,t.maxdmg+t.bonusdmg),(s+=this.player.stats.ap/14*t.speed+this.player.stats.moddmgdone)*this.player.stats.dmgmod}use(){this.player.freeslam&&(this.offhandhit=!0),this.player.freeslam||(this.player.rage-=this.cost),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.casttime&&!this.player.freeslam&&(this.player.mh.use(),this.player.oh&&this.player.oh.use()),this.player.freeslam=!1,this.timer=1e3*this.cooldown,log&&this.player.log(`${this.name} done casting`)}canUse(){return!this.timer&&!this.player.timer&&this.player.mh.timer>=this.mhthreshold&&(this.player.freeslam||this.cost<=this.player.rage)&&(!this.bloodsurge||this.player.freeslam)&&(!this.minrage||this.player.rage>=this.minrage)&&(!this.maincd||this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)}}class Fireball extends Spell{constructor(t,s){super(t,s),this.useonly=!0,this.proc={magicdmg:371},this.idmg=0,this.offensive=!1}prep(t){return void 0!==this.timetoend&&(this.usestep=Math.max(t-this.timetoend,0)),void 0!==this.timetostart&&(this.usestep=this.timetostart),0}use(){this.timer=1;let t=this.player.magicproc(this.proc);this.idmg+=t,log&&this.player.log(`Fireball hit for ${t}`)}canUse(){return!this.timer&&step>=this.usestep}}class GunAxe extends Spell{constructor(t,s){super(t,s),this.useonly=!0,this.proc={magicdmg:225},this.idmg=0,this.offensive=!1}prep(t){return void 0!==this.timetoend&&(this.usestep=Math.max(t-this.timetoend,0)),void 0!==this.timetostart&&(this.usestep=this.timetostart),0}use(){this.timer=1;let t=this.player.magicproc(this.proc);this.idmg+=t,log&&this.player.log(`Gun Axe hit for ${t}`)}canUse(){return!this.timer&&step>=this.usestep}}class BlademasterFury extends Spell{constructor(t,s){super(t,s,"Blademaster's Fury"),this.cooldown=120}dmg(){let t;return t=rng(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg),(t+=this.player.stats.ap/14*this.player.mh.normSpeed+this.player.stats.moddmgdone)*this.player.stats.dmgmod}use(){this.player.timer=1500,this.timer=1e3*this.cooldown,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.player.spells.whirlwind&&(this.player.spells.whirlwind.timer=0,log&&this.player.log(`${this.player.spells.whirlwind.name} off cooldown`))}canUse(){return!this.timer&&!this.player.timer&&(!this.player.spells.whirlwind||this.player.spells.whirlwind.timer>0)}}class ShieldSlam extends Spell{constructor(t,s){super(t,s,"Shield Slam"),this.cost=20-t.ragecostbonus,this.cooldown=6,this.duration&&(this.cooldown=Math.max(this.cooldown,this.duration)),this.swordboard&&(this.cost=0)}dmg(){let t,s=this.player.stats.ap+(this.player.auras.defendersresolve&&!this.player.auras.defendersresolve.timer?4*this.player.stats.defense:0);return(t=rng(this.value1,this.value2)+2*this.player.stats.block+~~(.15*s))*this.player.stats.dmgmod*this.player.mainspelldmg}use(){this.player.timer=1500,this.player.freeshieldslam||(this.player.rage-=this.cost),this.timer=1e3*this.cooldown,this.player.freeshieldslam=!1,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax)}canUse(){return this.player.shield&&!this.timer&&!this.player.timer&&(this.player.freeshieldslam||this.cost<=this.player.rage)&&(this.player.freeshieldslam||this.player.rage>=this.minrage)&&(!this.resolve||this.player.auras.defendersresolve&&!this.player.auras.defendersresolve.timer)&&(!this.swordboard||this.player.freeshieldslam)}}class Shockwave extends Spell{constructor(t,s){super(t,s),this.cost=15-t.ragecostbonus,this.cooldown=20,this.canDodge=!1}dmg(){return this.player.stats.ap/2*this.player.stats.dmgmod}use(){this.player.isValidStance("def")||this.player.switch("def"),this.player.timer=1500,this.player.rage-=this.cost,this.timer=1e3*this.cooldown,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax)}canUse(){return this.player.shield&&!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&(this.player.isValidStance("def")||this.player.talents.rageretained>=this.cost)&&(!this.maxrage||this.player.isValidStance("def")||this.player.rage<=this.maxrage)&&(!this.minrage||this.player.rage>=this.minrage)&&(!this.maincd||this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)}}class TheMoltenCore extends Spell{constructor(t,s){super(t,s,"The Molten Core"),this.useonly=!0,this.proc={magicdmg:20},this.idmg=0,this.offensive=!1}use(){let t=this.player.magicproc(this.proc);for(let s=0;s<this.player.adjacent;s++)t+=this.player.magicproc(this.proc);this.idmg+=t,log&&this.player.log(`The Molten Core hit for ${t}`)}}class UnstoppableMight extends Spell{constructor(t,s){super(t,s,"Unstoppable Might"),this.useonly=!0,this.offensive=!1}use(){"battle"!=this.player.stance?this.player.switch("battle"):this.player.switch("battle"==this.player.basestance?"zerk":this.player.basestance)}canUse(){let t=Math.max(this.player.auras.battleforecast.timer-step,this.player.auras.berserkerforecast.timer-step);return this.switchtimeactive&&this.player.rage<=this.switchrage&&t<=this.switchtime}}class StanceSwitch extends Spell{constructor(t,s){super(t,s,"Stance Switch"),this.useonly=!0,this.offensive=!1}use(){this.player.switch(this.player.basestance)}canUse(){return!this.player.timer&&!this.player.stancetimer&&this.player.stance!=this.player.basestance&&(!this.player.spells.unstoppablemight||this.player.spells.unstoppablemight.switchdefault)}}class Aura{constructor(t,s,e){this.id=s,this.timer=0,this.starttimer=0,this.stats={},this.mult_stats={},this.player=t,this.firstuse=!0,this.duration=0,this.stacks=0,this.uptime=0,this.name=e||this.constructor.name,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.useonly=!0,this.offensive=!1;let i=spells.filter(t=>t.id==this.id)[0];i||(i=buffs.filter(t=>t.id==this.id)[0]),i&&(i.durationactive&&(this.duration=parseInt(i.duration)),i.timetoendactive&&(this.timetoend=1e3*parseInt(i.timetoend)),i.timetostartactive&&(this.timetostart=1e3*parseInt(i.timetostart)),i.crusaders&&(this.crusaders=parseInt(i.crusaders)),i.haste&&(this.mult_stats={haste:parseInt(i.haste)}),i.value1&&(this.value1=i.value1),i.value2&&(this.value2=i.value2),i.minlevel&&(this.minlevel=i.minlevel),i.procblock&&(this.procblock=i.procblock),i.rageblockactive&&(this.rageblock=parseInt(i.rageblock)),i.erageblockactive&&(this.erageblock=parseInt(i.erageblock)),i.chargeblockactive&&(this.chargeblock=parseInt(i.chargeblock)),i.echargeblockactive&&(this.echargeblock=parseInt(i.echargeblock)),i.wfap&&(this.wfap=parseInt(i.wfap)),i.wfapperc&&(this.wfapperc=parseInt(i.wfapperc)),i.alwaystails&&(this.alwaystails=i.alwaystails),i.alwaysheads&&(this.alwaysheads=i.alwaysheads),i.item&&(this.item=i.item),i.noitemcd&&(this.noitemcd=i.noitemcd),i.maxrageactive&&(this.maxrage=parseInt(i.maxrage)))}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAuras(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAuras(),log&&this.player.log(`${this.name} removed`))}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0}prep(t,s){if(void 0!==this.timetostart&&(this.usestep=this.timetostart),void 0!==this.timetoend){if(this.item&&!this.noitemcd)return this.usestep=Math.max(Math.min(t-this.timetoend,t-s-1e3*this.duration),0),1e3*this.duration;this.usestep=Math.max(t-this.timetoend,0)}return 0}remove(){this.timer&&(this.uptime+=step-this.starttimer,this.timer=0,this.player.updateAuras(),log&&this.player.log(`${this.name} removed`))}}class Recklessness extends Aura{constructor(t,s){super(t,s),this.duration=12,this.stats={crit:"sod"==this.player.mode?50:100},this.cooldown="sod"==this.player.mode?300:1800}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.player.timer=1500,this.starttimer=step,this.player.isValidStance("zerk")||this.player.switch("zerk"),this.player.updateAuras(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}canUse(){return!this.timer&&!this.player.timer&&step>=this.usestep}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.usestep=this.starttimer+1e3*this.cooldown,this.player.updateAuras(),log&&this.player.log(`${this.name} removed`))}}class Flurry extends Aura{constructor(t,s){super(t,s),this.duration=12,this.mult_stats={haste:t.talents.flurry}}proc(){this.stacks--,this.stacks||(this.uptime+=step-this.starttimer,this.timer=0,this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}use(){this.timer=1,this.stacks||(this.starttimer=step,this.player.updateHaste()),this.stacks=3,log&&this.player.log(`${this.name} applied`)}}class DeepWounds extends Aura{constructor(t,s,e){super(t,s,"Deep Wounds"+(e?" "+e:"")),this.duration=12,this.idmg=0,this.totaldmg=0,this.saveddmg=0,this.ticksleft=0}tickdmg(t){let s,e;t?(s=this.player.oh.mindmg+this.player.oh.bonusdmg+this.player.stats.moddmgdone+this.player.stats.ap/14*this.player.oh.speed,e=this.player.oh.maxdmg+this.player.oh.bonusdmg+this.player.stats.moddmgdone+this.player.stats.ap/14*this.player.oh.speed):(s=this.player.mh.mindmg+this.player.mh.bonusdmg+this.player.stats.moddmgdone+this.player.stats.ap/14*this.player.mh.speed,e=this.player.mh.maxdmg+this.player.mh.bonusdmg+this.player.stats.moddmgdone+this.player.stats.ap/14*this.player.mh.speed);let i=(s+e)/2;return i*=(t?this.player.oh.modifier:this.player.mh.modifier)*this.player.stats.dmgmod*this.player.talents.deepwounds*this.player.bleedmod}step(){for(;step>=this.nexttick;){this.player.stepauras(!0);let t=this.saveddmg/this.ticksleft;this.saveddmg-=t,this.idmg+=t,this.totaldmg+=t,this.ticksleft--,log&&this.player.log(`${this.name} tick for ${t.toFixed(2)}`),this.nexttick+=3e3}step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.nexttick=0,this.firstuse=!1,this.saveddmg=0,log&&this.player.log(`${this.name} removed`))}use(t){this.timer&&(this.uptime+=step-this.starttimer),this.ticksleft=4,this.saveddmg+=this.tickdmg(t),this.nexttick?this.timer=this.nexttick-3e3+1e3*this.duration:(this.nexttick=step+3e3,this.timer=step+1e3*this.duration),this.starttimer=step,log&&this.player.log(`${this.name} applied`)}}class OldDeepWounds extends Aura{constructor(t,s,e){super(t,s,"Deep Wounds"+(e?" "+e:"")),this.duration=12,this.idmg=0,this.totaldmg=0}step(){for(;step>=this.nexttick;){let t=(this.player.mh.mindmg+this.player.mh.bonusdmg+this.player.stats.moddmgdone+this.player.stats.ap/14*this.player.mh.speed+(this.player.mh.maxdmg+this.player.mh.bonusdmg+this.player.stats.moddmgdone+this.player.stats.ap/14*this.player.mh.speed))/2;t*=this.player.mh.modifier*this.player.stats.dmgmod*this.player.talents.deepwounds*this.player.bleedmod,this.idmg+=t/4,this.totaldmg+=t/4,log&&this.player.log(`${this.name} tick for ${(t/4).toFixed(2)}`),this.nexttick+=3e3}step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1)}use(){this.timer&&(this.uptime+=step-this.starttimer),this.nexttick=step+3e3,this.timer=step+1e3*this.duration,this.starttimer=step,log&&this.player.log(`${this.name} applied`)}}class Crusader extends Aura{constructor(t,s){super(t,s),this.duration=15,this.stats={str:100}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateStrength(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateStrength(),log&&this.player.log(`${this.name} removed`))}}class Cloudkeeper extends Aura{constructor(t,s){super(t,s),this.duration=30,this.stats={ap:100}}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAuras(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.player.itemtimer&&!this.timer&&step>=this.usestep}}class Felstriker extends Aura{constructor(t,s){super(t,s),this.duration=3,this.stats={crit:100,hit:100}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.update(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.update(),log&&this.player.log(`${this.name} removed`))}}class DeathWish extends Aura{constructor(t,s){super(t,s,"Death Wish"),this.duration=30,this.mult_stats={dmgmod:20},this.cooldown=180}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.player.rage-=10,this.player.timer=1500,this.starttimer=step,this.player.updateDmgMod(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}canUse(){return!this.timer&&!this.player.timer&&this.player.rage>=10&&step>=this.usestep}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.usestep=this.starttimer+1e3*this.cooldown,this.player.updateDmgMod(),log&&this.player.log(`${this.name} removed`))}}class BattleStance extends Aura{constructor(t,s){super(t,s,"Battle Stance"),this.stats={}}}class DefensiveStance extends Aura{constructor(t,s){super(t,s,"Defensive Stance"),this.mult_stats={dmgmod:-10,spelldmgmod:-10}}}class BerserkerStance extends Aura{constructor(t,s){super(t,s,"Berserker Stance"),this.stats={crit:3}}}class GladiatorStance extends Aura{constructor(t,s){super(t,s,"Gladiator Stance"),this.mult_stats={dmgmod:10}}}class MightyRagePotion extends Aura{constructor(t,s){super(t,s,"Mighty Rage Potion"),this.stats={str:60},this.duration=20}use(){this.timer&&(this.uptime+=step-this.starttimer);let t=this.player.rage;this.player.rage=Math.min(this.player.rage+~~rng(this.value1,this.value2),100),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateStrength(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),this.player.auras.consumedrage&&t<60&&this.player.rage>=60&&this.player.auras.consumedrage.use(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&step>=this.usestep}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateStrength(),log&&this.player.log(`${this.name} removed`))}}class BloodFury extends Aura{constructor(t,s){super(t,s,"Blood Fury"),this.duration=15,this.mult_stats={baseapmod:25}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.timer=1500,this.player.updateAuras(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAuras(),log&&this.player.log(`${this.name} removed`))}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&step>=this.usestep}}class Berserking extends Aura{constructor(t,s){super(t,s),this.duration=10}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.rage-=5,this.player.timer=1500,this.player.updateHaste(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&this.player.rage>=5&&step>=this.usestep}}class Empyrean extends Aura{constructor(t,s){super(t,s),this.duration=10,this.mult_stats={haste:20},this.name="Empyrean Haste"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}}class Eskhandar extends Aura{constructor(t,s){super(t,s),this.duration=5,this.mult_stats={haste:30},this.name="Eskhandar Haste"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}}class Zeal extends Aura{constructor(t,s){super(t,s),this.duration=15,this.stats={moddmgdone:10}}use(){this.player.timer&&this.player.timer<1500||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} applied`))}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} removed`))}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0,this.player.updateBonusDmg()}}class Annihilator extends Aura{constructor(t,s){super(t,s),this.duration=45,this.armor=200,this.stacks=0}use(){this.player.faeriefire||rng10k()<this.player.target.binaryresist||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=this.stacks>2?3:this.stacks+1,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} applied`))}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} removed`))}}class Rivenspike extends Aura{constructor(t,s){super(t,s),this.duration=30,this.armor=200,this.stacks=0}use(){this.player.faeriefire||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=this.stacks>2?3:this.stacks+1,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} applied`))}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} removed`))}}class Bonereaver extends Aura{constructor(t,s){super(t,s),this.duration=10,this.armor=700,this.stacks=0}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=this.stacks>2?3:this.stacks+1,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} removed`))}}class Destiny extends Aura{constructor(t,s){super(t,s),this.duration=10,this.stats={str:200}}}class Untamed extends Aura{constructor(t,s){super(t,s),this.duration=8,this.stats={str:300},this.name="The Untamed Blade"}}class Pummeler extends Aura{constructor(t,s){super(t,s),this.duration=30,this.mult_stats={haste:50},this.name="Manual Crowd Pummeler"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}}class Windfury extends Aura{constructor(t,s){super(t,s),this.wfap&&(this.stats={ap:this.wfap}),this.wfapperc&&(this.mult_stats={apmod:this.wfapperc})}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1500,this.starttimer=step,this.mintime=step%batching,this.stacks=2,this.player.updateAP(),this.player.extraattacks++,log&&this.player.log(`${this.name} applied`)}proc(){this.stacks<2?(step<this.mintime?this.timer=this.mintime:this.step(),this.stacks=0):this.stacks--}step(){(step>=this.timer||0==this.stacks)&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.stacks=0,this.firstuse=!1,this.player.updateAP(),log&&this.player.log(`${this.name} removed`))}}class Swarmguard extends Aura{constructor(t,s){super(t,s),this.duration=30,this.armor=200,this.stacks=0,this.chance=~~(10*t.mh.speed/.006),this.timetoend=3e4}use(){this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=0,log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&step>=this.usestep}proc(){this.stacks=Math.min(this.stacks+1,6),this.player.updateArmorReduction(),log&&this.player.log(`${this.name} proc`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.stacks=0,this.firstuse=!1,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} removed`))}}class Flask extends Aura{constructor(t,s){super(t,s),this.duration=60,this.stats={str:75},this.name="Diamond Flask"}use(){this.player.timer=1500,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAuras(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&!this.player.itemtimer&&step>=this.usestep}}class Slayer extends Aura{constructor(t,s){super(t,s),this.duration=20,this.stats={ap:260},this.name="Slayer's Crest"}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}}class Spider extends Aura{constructor(t,s){super(t,s),this.duration=15,this.mult_stats={haste:20},this.name="Kiss of the Spider"}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}}class Earthstrike extends Aura{constructor(t,s){super(t,s),this.duration=20,this.stats={ap:280}}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}}class Gabbar extends Aura{constructor(t,s){super(t,s),this.duration=20,this.stats={ap:65},this.name="Jom Gabbar"}use(){this.stats.ap=65,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}step(){(step-this.starttimer)%2e3==0&&(this.stats.ap+=65,this.player.updateAP(),log&&this.player.log(`${this.name} tick`)),step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAP(),log&&this.player.log(`${this.name} removed`))}}class PrimalBlessing extends Aura{constructor(t,s){super(t,s,"Primal Blessing"),this.duration=12,this.stats={ap:300},this.cooldown=240,this.cooldowntimer=0}use(){this.cooldowntimer>step||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.cooldowntimer=step+1e3*this.cooldown,this.player.updateAP(),log&&this.player.log(`${this.name} applied`))}}class BloodrageAura extends Aura{constructor(t,s){super(t,s),this.duration=10,this.name="Bloodrage"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,log&&this.player.log(`${this.name} applied`)}step(){return(step-this.starttimer)%1e3==0&&(this.player.rage=Math.min(this.player.rage+1,100),this.player.auras.consumedrage&&this.player.rage>=60&&this.player.rage<81&&this.player.auras.consumedrage.use(),log&&this.player.log(`${this.name} tick`)),step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,log&&this.player.log(`${this.name} removed`)),this.timer}}class Zandalarian extends Aura{constructor(t,s){super(t,s),this.duration=20,this.stats={moddmgdone:40}}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.stats.moddmgdone=40,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} applied`)}proc(){this.stats.moddmgdone-=2,this.player.updateBonusDmg(),this.stats.moddmgdone<=0&&(this.timer=step,this.step())}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} removed`))}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0,this.player.updateBonusDmg()}}class Avenger extends Aura{constructor(t,s){super(t,s),this.duration=10,this.stats={ap:200},this.name="Argent Avenger"}}class BerserkerRageAura extends Aura{constructor(t,s){super(t,s),this.duration=10,this.name="Berserker Rage"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,log&&this.player.log(`${this.name} removed`))}}class BattleShout extends Aura{constructor(t,s){super(t,s),this.duration=120+36*this.player.talents.boomingvoice,this.cost=10-2*this.player.talents.boomingvoice,this.name="Battle Shout";let e=~~((this.player.level-this.minlevel)*this.value2);this.stats.ap=~~((this.value1+e+(this.player.enhancedbs?30:0))*(1+this.player.talents.impbattleshout))}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.rage-=this.cost,this.player.timer=1500,this.player.updateAP(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAP(),log&&this.player.log(`${this.name} removed`))}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage}}class ConsumedRage extends Aura{constructor(t,s){super(t,s,"Consumed by Rage"),this.duration=12}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateDmgMod(),log&&this.player.log(`${this.name} removed`))}}class Rend extends Aura{constructor(t,s){super(t,s);let e=3*this.value2;this.duration=Math.max(this.duration||e,e),this.cost=10-t.ragecostbonus,this.idmg=0,this.totaldmg=0,this.data=[0,0,0,0,0],this.canDodge=!0,this.nocrit=!0,this.dmgmod=1+this.player.talents.rendmod/100,this.tfbstep=-6e3,this.offensive=!0}step(){for(;step>=this.nexttick&&this.stacks;)this.idmg+=this.tickdmg,this.totaldmg+=this.tickdmg,log&&this.player.log(`${this.name} tick for ${this.tickdmg.toFixed(2)}`),this.nexttick+=3e3,this.stacks--,this.stacks||(this.uptime+=step-this.starttimer,log&&this.player.log(`${this.name} removed`)),this.player.tasteforblood&&this.tfbstep+6e3<=step&&(this.player.dodgetimer=9e3,this.tfbstep=step,log&&this.player.log("Taste of Blood applied"));step>=this.timer&&(this.timer=0,this.firstuse=!1)}use(){let t=this.player.rollmeleespell(this);if(this.data[t]++,t==RESULT.MISS)return;if(t==RESULT.DODGE)return void(this.player.dodgetimer=5e3);this.timer&&(this.uptime+=step-this.starttimer),this.nexttick=step+3e3,this.timer=step+1e3*this.duration,this.player.timer=1500,this.starttimer=step,this.stacks=this.value2,this.player.isValidStance("battle",!0)||this.player.switch("battle"),this.player.rage-=this.cost;let s=this.value1;this.player.bloodfrenzy&&(s+=this.value1+~~(.03*this.player.stats.ap*this.value2));let e=s*this.player.stats.dmgmod*this.dmgmod*this.player.bleedmod;this.tickdmg=e/this.value2,this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}canUse(){return!this.timer&&!this.player.timer&&this.player.rage>=this.cost&&(this.player.isValidStance("battle",!0)||this.player.talents.rageretained>=this.cost)&&(!this.maxrage||this.player.isValidStance("battle",!0)||this.player.rage<=this.maxrage)}end(){this.stacks&&(this.uptime+=step-this.starttimer),this.timer=0,this.stacks=0,this.tfbstep=-6e3}}class Vibroblade extends Aura{constructor(t,s){super(t,s),this.duration=30,this.armor=100}use(){this.player.faeriefire||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} applied`))}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} removed`))}}class Ultrasonic extends Aura{constructor(t,s){super(t,s),this.duration=30,this.armor=160}use(){this.player.faeriefire||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} applied`))}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} removed`))}}class VoidMadness extends Aura{constructor(t,s){super(t,s,"Void Madness"),this.duration=10,this.mult_stats={haste:10}}use(){this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&step>=this.usestep}}class WeaponBleed extends Aura{constructor(t,s,e,i,r,a){super(t,s,"Weapon Bleed"+(a?" OH":" MH")),this.duration=parseInt(e)/1e3,this.interval=parseInt(i),this.ticks=e/i,this.dmg=parseInt(r)*this.player.bleedmod,this.idmg=0,this.totaldmg=0}step(){for(;step>=this.nexttick;)this.idmg+=this.dmg,this.totaldmg+=this.dmg,log&&this.player.log(`${this.name} tick for ${this.dmg}`),this.nexttick+=this.interval;step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1)}use(){this.timer&&(this.uptime+=step-this.starttimer),this.nexttick=step+this.interval,this.timer=step+1e3*this.duration,this.starttimer=step}}class Ragehammer extends Aura{constructor(t,s){super(t,s),this.duration=15,this.stats={ap:20},this.mult_stats={haste:5}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP(),this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAP(),this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}}class BlisteringRagehammer extends Aura{constructor(t,s){super(t,s,"Blistering Ragehammer"),this.duration=15,this.stats={moddmgdone:30},this.mult_stats={haste:10}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateBonusDmg(),this.player.updateHaste(),this.player.updateHasteDamage(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateBonusDmg(),this.player.updateHaste(),this.player.updateHasteDamage(),log&&this.player.log(`${this.name} removed`))}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0,this.player.updateBonusDmg(),this.player.updateHasteDamage()}}class Jackhammer extends Aura{constructor(t,s){super(t,s),this.duration=10,this.mult_stats={haste:30}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}}class LordGeneral extends Aura{constructor(t,s){super(t,s),this.duration=30,this.stats={ap:50}}}class Stoneslayer extends Aura{constructor(t,s){super(t,s),this.duration=8,this.stats={moddmgdone:10}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} removed`))}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0,this.player.updateBonusDmg()}}class CleaveArmor extends Aura{constructor(t,s){super(t,s),this.duration=20,this.armor=300}use(){this.player.faeriefire||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} applied`))}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateArmorReduction(),log&&this.player.log(`${this.name} removed`))}}class StrengthChampion extends Aura{constructor(t,s){super(t,s),this.duration=30,this.stats={str:120}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateStrength(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateStrength(),log&&this.player.log(`${this.name} removed`))}}class MildlyIrradiated extends Aura{constructor(t,s){super(t,s,"Mildly Irradiated"),this.duration=15,this.stats={ap:40}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&step>=this.usestep}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAP(),log&&this.player.log(`${this.name} removed`))}}class GyromaticAcceleration extends Aura{constructor(t,s){super(t,s,"Gyromatic Acceleration"),this.duration=20,this.mult_stats={haste:5}}use(){this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&step>=this.usestep}}class Spicy extends Aura{constructor(t,s){super(t,s,"Spicy!"),this.duration=30,this.mult_stats={haste:4}}use(){this.firstuse&&(this.timer=step+1e3*this.duration,this.starttimer=step,this.firstuse=!1,this.player.updateHaste(),this.player.updateHasteDamage(),this.player.attackproc1||(this.player.attackproc1={chance:500,magicdmg:7,spicy:!0}),this.player.attackproc2||(this.player.attackproc2={chance:500,magicdmg:7,spicy:!0}),log&&this.player.log(`${this.name} applied`))}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateHaste(),this.player.updateHasteDamage(),this.player.attackproc1&&this.player.attackproc1.spicy&&delete this.player.attackproc1,this.player.attackproc2&&this.player.attackproc2.spicy&&delete this.player.attackproc2,log&&this.player.log(`${this.name} removed`))}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0,this.player.updateHasteDamage(),this.player.attackproc1&&this.player.attackproc1.spicy&&delete this.player.attackproc1,this.player.attackproc2&&this.player.attackproc2.spicy&&delete this.player.attackproc2}}class GneuroLogical extends Aura{constructor(t,s){super(t,s,"Gneuro-Logical Shock"),this.duration=10,this.mult_stats={haste:20}}use(){this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&step>=this.usestep}}class CoinFlip extends Aura{constructor(t,s){super(t,s,"Coin Flip"),this.duration=30,this.stats={crit:3}}use(){this.firstuse=!1,this.alwaystails||(this.alwaysheads||rng10k()<5e3)&&(this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAuras(),log&&this.player.log(`${this.name} Crit applied`))}canUse(){return this.firstuse&&!this.timer&&step>=this.usestep}}class Rampage extends Aura{constructor(t,s){super(t,s),this.duration=30,this.mult_stats={apmod:10},this.cooldown=120}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.player.timer=1500,this.starttimer=step,this.player.updateAP(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}canUse(){return!this.timer&&!this.player.timer&&this.player.isEnraged()&&step>=this.usestep}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.usestep=this.starttimer+1e3*this.cooldown,this.player.updateAP(),log&&this.player.log(`${this.name} removed`))}}class WreckingCrew extends Aura{constructor(t,s){super(t,s,"Wrecking Crew"),this.duration=12}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.mainspelldmg=1.1,log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.mainspelldmg=1,log&&this.player.log(`${this.name} removed`))}}class SerpentAscension extends Aura{constructor(t,s){super(t,s,"Serpent's Ascension"),this.duration=12,this.stats={ap:150},this.cooldown=120,this.cooldowntimer=0}use(){this.cooldowntimer>step||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.cooldowntimer=step+1e3*this.cooldown,this.player.updateAP(),log&&this.player.log(`${this.name} applied`))}}class VoodooFrenzy extends Aura{constructor(t,s){super(t,s,"Voodoo Frenzy"),this.duration=10,this.cooldown=40,this.cooldowntimer=0}use(){this.cooldowntimer>step||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.cooldowntimer=step+1e3*this.cooldown,this.player.stats.str>=this.player.stats.agi?this.stats={str:35}:this.stats={agi:35},this.player.updateAuras(),log&&this.player.log(`${this.name} applied`))}}class RoarGuardian extends Aura{constructor(t,s){super(t,s,"Roar of the Guardian"),this.duration=20,this.stats={ap:70}}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP(),log&&this.player.log(`${this.name} applied`)}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}}class RelentlessStrength extends Aura{constructor(t,s){super(t,s,"Relentless Strength"),this.duration=20,this.stats={moddmgdone:20}}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.stats.moddmgdone=20,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} applied`)}proc(){this.stats.moddmgdone-=1,this.player.updateBonusDmg(),this.stats.moddmgdone<=0&&(this.timer=step,this.step())}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} removed`))}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0,this.player.updateBonusDmg()}}class EchoesDread extends Aura{constructor(t,s){super(t,s,"Echoes of Dread"),this.duration=10,this.stats={ap:50},this.mult_stats={haste:5},this.cooldown=40,this.cooldowntimer=0}use(){this.cooldowntimer>step||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.cooldowntimer=step+1e3*this.cooldown,this.player.updateAP(),this.player.updateHaste(),log&&this.player.log(`${this.name} applied`))}}class FreshMeat extends Aura{constructor(t,s){super(t,s,"Fresh Meat"),this.duration=12,this.mult_stats={dmgmod:10}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateDmgMod(),this.firstuse=!1,log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateDmgMod(),log&&this.player.log(`${this.name} removed`))}}class SuddenDeath extends Aura{constructor(t,s){super(t,s,"Sudden Death"),this.duration=10}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,log&&this.player.log(`${this.name} removed`))}remove(){this.uptime+=step-this.starttimer,this.timer=0,log&&this.player.log(`${this.name} removed`)}}class WarriorsResolve extends Aura{constructor(t,s){super(t,s,"Warrior's Resolve")}use(){let t=this.player.rage;this.player.rage=Math.min(this.player.rage+10,100),this.player.auras.consumedrage&&t<60&&this.player.rage>=60&&this.player.auras.consumedrage.use(),log&&this.player.log(`${this.name} proc`)}}class EchoesStance extends Aura{constructor(t,s){super(t,s,"Echoes of Stance"),this.duration=5}use(t){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.stance=t,log&&this.player.log(`${this.name} applied`)}}class BattleForecast extends Aura{constructor(t,s){super(t,s,"Battle Forecast"),this.mult_stats={dmgmod:10},this.duration=10}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateDmgMod(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateDmgMod(),log&&this.player.log(`${this.name} removed`))}remove(){this.timer&&(this.uptime+=step-this.starttimer,this.timer=0,this.player.updateDmgMod(),log&&this.player.log(`${this.name} removed`))}}class BerserkerForecast extends Aura{constructor(t,s){super(t,s,"Berserker Forecast"),this.stats={crit:10},this.duration=10}}class DefendersResolve extends Aura{constructor(t,s){super(t,s,"Defender's Resolve"),this.duration=15}use(){this.stats={ap:4*this.player.stats.defense},this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP(),this.maxdelay=rng(this.player.reactionmin,this.player.reactionmax),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateAP(),log&&this.player.log(`${this.name} removed`))}}class MeltArmor extends Aura{constructor(t,s){super(t,s,"Melt Armor"),this.duration=10,this.stats.moddmgtaken=10}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateBonusDmg(),log&&this.player.log(`${this.name} removed`))}}class SingleMinded extends Aura{constructor(t,s){super(t,s),this.duration=10,this.stacks=0,this.mult_stats={haste:2}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=Math.min(5,this.stacks+1),this.mult_stats={haste:2*this.stacks},this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.stacks=0,this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}}class DemonTaintedBlood extends Aura{constructor(t,s){super(t,s,"Demon-Tainted Blood"),this.duration=20,this.stats={str:80}}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateStrength(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateStrength(),log&&this.player.log(`${this.name} removed`))}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}}class MoonstalkerFury extends Aura{constructor(t,s){super(t,s,"Moonstalker Fury"),this.duration=15,this.stats={str:60}}use(){this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateStrength(),log&&this.player.log(`${this.name} applied`)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateStrength(),log&&this.player.log(`${this.name} removed`))}canUse(){return this.firstuse&&!this.timer&&!this.player.itemtimer&&step>=this.usestep}}class MagmadarsReturn extends Aura{constructor(t,s){super(t,s,"Magmadar's Return"),this.duration=12,this.mult_stats={haste:10},this.cooldown=60,this.cooldowntimer=0}use(){this.cooldowntimer>step||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.cooldowntimer=step+1e3*this.cooldown,this.player.updateHaste(),log&&this.player.log(`${this.name} applied`))}}class JujuFlurry extends Aura{constructor(t,s){super(t,s,"Juju Flurry"),this.duration=20,this.cooldown=60,this.mult_stats={haste:3}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHasteDamage(),this.player.updateHaste(),log&&this.player.log(`${this.name} applied`)}canUse(){return!this.timer&&step>=this.usestep}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.usestep=this.starttimer+1e3*this.cooldown,this.player.updateHasteDamage(),this.player.updateHaste(),log&&this.player.log(`${this.name} removed`))}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0,this.player.updateHasteDamage()}}